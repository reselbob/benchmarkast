const base64 = require('base-64');const utf8 = require('utf8');const YAML = require('json-to-pretty-yaml');const validateK8SSecretConfigSync = (config) => {    const missingProperties = [];    if(!config.agentUrl) missingProperties.push('agentUrl');    if(!config.airlineUrl) missingProperties.push('airlineUrl');    if(!config.hotelUrl) missingProperties.push('hotelUrl');    if(!config.autoUrl) missingProperties.push('autoUrl');    if(!config.usersUrl) missingProperties.push('usersUrl');       const msg =  {message: "Missing properties in K8SSecretConfig ",     missingProperties    }        if(missingProperties.length>0)  throw new Error(JSON.stringify(msg));}const createK8SSecretJson = (encoded) => {    const obj = {}    obj.apiVersion = 'v1';    obj.kind = 'Secret';    obj.metadata ={};    obj.metadata.name = 'travelagent-data';    obj.type = 'Opaque';    obj.data = encoded    return obj;}const encodeK8SSecretConfigSync =   (config) => {    const encoded = {};    for (const prop in config) {        encoded[prop] = encode(config[prop])    }    return YAML.stringify(createK8SSecretJson(encoded));}const encode = (str) => {    const bytes = utf8.encode(str);    const encoded = base64.encode(bytes);    return encoded;}module.exports = {validateK8SSecretConfigSync, encodeK8SSecretConfigSync}